version: '3.8'

services:
  authentication:
    build: 
      context: ./authentication
      dockerfile: dockerfile
    ports:
      - "5010:5010"
    networks:
      - prestashop-network
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}
      - JWT_REFRESH_TOKEN_EXPIRE_MINUTES=${JWT_REFRESH_TOKEN_EXPIRE_MINUTES}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - JWT_PRIVATE_KEY=${JWT_PRIVATE_KEY}
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
    secrets:
      - db_password
    depends_on:
      - db
    restart: unless-stopped

  products:
    build: 
      context: ./products
      dockerfile: dockerfile
    ports:
      - "5001:5001"
    networks:
      - prestashop-network
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI} 
    depends_on:
      - db
    restart: unless-stopped

  reviews:
    build: 
      context: ./reviews
      dockerfile: dockerfile
    ports:
      - "5002:5002"
    networks:
      - prestashop-network
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: mariadb:10.5
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    secrets:
      - db_password
      - mysql_root_password
    # ports:
    #   - "3306:3306"
    networks:
      - prestashop-network
    volumes:
      - db-data:/var/lib/mysql
    restart: unless-stopped

  prestashop-api:
    image: prestashop/prestashop:latest
    #restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - prestashop-network
    environment:
      - DB_SERVER=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${MYSQL_USER}
      - DB_PASSWD=${MYSQL_PASSWORD}
      - PS_FOLDER_ADMIN=${PS_FOLDER_ADMIN}
      - PS_FOLDER_INSTALL=${PS_FOLDER_INSTALL}
      - PS_INSTALL_AUTO=${PS_INSTALL_AUTO}
      - PS_DOMAIN=${PS_DOMAIN}
      - ADMIN_MAIL=${ADMIN_MAIL}
      - ADMIN_PASSWD=${ADMIN_PASSWD}
    depends_on:
      - db

  zabbix-web:
    image: zabbix/zabbix-web-nginx-mysql:latest
    ports:
      - "8081:80"
    networks:
      - prestashop-network
    environment:
      - DB_SERVER_HOST=db
      - MYSQL_DATABASE=zabbix
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - ZBX_SERVER_HOST=zabbix-server
    depends_on:
      - zabbix-server
    restart: unless-stopped

  zabbix-server:
    build: 
      context: ./zabbix
      dockerfile: dockerfile
    ports:
      - "10051:10051"
    networks:
      - prestashop-network
    environment:
      - DB_SERVER_HOST=db
      - MYSQL_DATABASE=zabbix
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD_FILE=${MYSQL_ROOT_PASSWORD_FILE}
    secrets:
      - db_password
    volumes:
      - ./zabbix/config/zabbix_server.conf:/etc/zabbix/zabbix_server.conf
    depends_on:
      - db
    restart: unless-stopped

  zabbix-agent:
    image: zabbix/zabbix-agent:latest
    networks:
      - prestashop-network
    environment:
      - ZBX_HOSTNAME=zabbix-agent
      - ZBX_SERVER_HOST=zabbix-server
    volumes:
      - ./zabbix/config/zabbix_agentd.conf:/etc/zabbix/zabbix_agentd.conf
    links:
      - zabbix-server
    depends_on:
      - zabbix-server
    restart: unless-stopped

networks:
  prestashop-network:
    driver: bridge

volumes:
  db-data:

secrets:
  mysql_root_password:
    file: ./db_password.secret
  db_password:
    file: ./db_password.secret
