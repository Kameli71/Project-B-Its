pipeline {
    agent any
    environment {
        DB_PRESTA = credentials('PRESTA_DB_DEV')
        PRESTA_VAR = credentials('PRESTA_MAIN_DEV')
        PRESTA_KEY_MNG = credentials('PRESTA_API_KEY_DEV')
        PRESTA_PAT = credentials('PRESTA_PAT_DEV')
    }
    stages {
        stage('Clean') {
            steps {
                cleanWs()
                // in groovy
                // echo "${env.WORKSPACE}"
                //in shell
                // sh 'echo $WORKSPACE'
                // in groovy script 
                // script {
                //     print env.WORKSPACE
                // }
            }
        }
        stage('clone') {
            
            steps {
                echo "Clonage du repo en cour..."
                checkout scmGit(branches: [[name: '*/dev_jo_compose']],
                 extensions: [],
                 userRemoteConfigs: [[url: 'https://' + $PRESTA_PAT + '@github.com/Projetits/Project-B-Its.git']]
                 )
                // sh "cd Project-B-Its"
                sh('pwd && ls -la')
                sh('cp $DB_PRESTA ./prestashop/')
                sh('cp $PRESTA_VAR ./prestashop/')
                sh('cp $PRESTA_KEY_MNG ./prestashop/')
            }
        }
        stage('Build') {

            steps {
                sh ('ls -la')
                sh "cd ./prestashop/ && docker compose up -d"
                echo 'Installation de prestashop'
            }
        }

        stage('Test_clean') {
            steps {
                sh "docker exec -i api_manager python -m pytest ./tests"
                sh "docker container stop prestadb prestatest api_manager_dev"
                sh "docker container prune -f"
            }
        }
    }
}
   